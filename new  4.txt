    
    // Performed after player movement.
    public boolean drawDungeon(int turnCounter)
    {
        Dimension screenRes = Toolkit.getDefaultToolkit().getScreenSize();//gets size of screen
        //How many tiles are drawn, including that of the player.
        final int numTilesX = 11;
        final int numTilesY = 11;
        //Needed length and height of tiles in pixels
        int tileLengthX = (int) screenRes.getWidth() / numTilesX;
        int tileLengthY = (int) screenRes.getHeight() / numTilesY;
        int currentX;
        int currentY;
        //Maybe remove?

        int playerX = player.currentTile.x;
        int playerY = player.currentTile.y;

        for (int i = 0; i < numTilesX; i++)
        {
            for (int j = 0; j < numTilesY; j++)
            {
                DungeonTile drawnTile = DungeonRunner.tileList[i][j];
                // Draws a row of tiles.
                g.drawImage(drawnTile.tileImage, drawnTile.x, drawnTile.y, i * tileLengthX, j * tileLengthY, null);
            }
        }
    }
    //Reused in character, inefficient. :(
//TO ANISH: I've moved every dungeon related method under this category. Please turn it into 1 method
    //Reused in character, inefficient. :<

    /*Obsolete with 2D array.
    public DungeonTile findTile(int x, int y)
    {
        for (int i = 0; i < DungeonRunner.tileList.length; i++)
        {
            if ((DungeonRunner.tileList.get(i).x == x) && (DungeonRunner.tileList.get(i).y == y))
            {
                return DungeonRunner.tileList.get(i);
            
            }
        }
    }
*/